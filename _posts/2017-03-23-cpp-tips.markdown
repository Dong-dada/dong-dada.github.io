---
layout: post
title:  "C/C++ 小知识点"
date:   2017-03-23 16:18:30 +0800
categories: cpp
---

* TOC
{:toc}

## bad_div 问题：

这个知识点来自于 《软件调试》 1.6.1 节。请看下面的代码：

```c
int bad_div(int m, unsigned int n)
{
	return m/n;
}

int main()
{
	printf("%d\n", bad_div(-6, 3));
	// 错误！输出 1431655763

	return 0;
}
```

上述代码出错的原因在于，出错的原因在于参数 `n` 是一个无符号整数，编译器在编译 `m/n` 时采用了无符号除法指令 DIV, 这相当于假设参数 `m` 也是无符号整数，从而导致了意外的结果。


## 利用 ostringstream 进行字符串格式化

有时候想打 log, 需要进行字符串格式化，使用 sprintf 比较麻烦(需要建立 buffer, 需要写参数格式), 可以利用 `std::ostringstream` 来实现:

```cpp
void foo(int param1, const char* param2, double param3)
{
	std::ostringstream log_str;
	log_str << "[foo] " << "param1:" << param1 << ", param2:" << param2 << ", param3:" << param3;
	OutputDebugStringA(log_str.str().c_str())

	// ...
}
```


## 在 release 模式下禁止某个文件被优化的方法

这实际上是 Visual Studio IDE 的一个小技巧。

有时候项目只有 release 版本，没有 debug 版本，或者 debug 版本编译不过，这样本机调试的时候只能用 release 版本，很多变量和过程看不清晰，这个时候可以将要调试的文件设为禁止优化。这样一来就可以像 debug 版本那样观察运行时的详细信息了：

在目标 cpp 文件上右键 --> 选择 Properties --> C/C++ --> Optimization --> Optimization 选项选择 Disabled (/Od)。

![]( {{ site.url }}/asset/cpp-tips-release-disable-optimization.png )